-- DDL generated by Postico 1.5.9
-- Not all database features are supported. Do not use for backup.

-- Table Definition ----------------------------------------------

CREATE TABLE water_import.charge_versions (
    charge_version_id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    licence_id integer NOT NULL,
    version integer NOT NULL,
    region_code integer NOT NULL,
    date_created timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT charge_versions_licence_id_version_region_code_key UNIQUE (licence_id, version, region_code)
);


-- DDL generated by Postico 1.5.9
-- Not all database features are supported. Do not use for backup.

-- Table Definition ----------------------------------------------

CREATE TABLE water_import.charge_elements (
    charge_element_id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    element_id integer NOT NULL,
    licence_id integer NOT NULL,
    version integer NOT NULL,
    region_code integer NOT NULL,
    date_created timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT charge_elements_element_id_licence_id_version_region_code_key UNIQUE (element_id, licence_id, version, region_code)
);



-- Restore charge version import records

insert into water_import.charge_versions
(charge_version_id, licence_id, version, region_code, date_created)
select cv.charge_version_id, nl."ID"::integer AS licence_id, cv.version_number as version, cv.region_code, NOW() as date_created
from water.charge_versions cv
join import."NALD_ABS_LICENCES" nl on cv.licence_ref=nl."LIC_NO"
join import."NALD_CHG_VERSIONS" ncv on nl."FGAC_REGION_CODE"=ncv."FGAC_REGION_CODE" and nl."ID"=ncv."AABL_ID" and cv.version_number::varchar=ncv."VERS_NO"
where cv.source='nald';

-- Restore charge element import records

insert into water_import.charge_elements
(charge_element_id, element_id, region_code, licence_id, version, date_created)
select 
ce.charge_element_id, 
case 
  when position(':' in ce.external_id::varchar)=0
    then ce.external_id::integer
  else split_part(ce.external_id, ':', 2)::integer
end as element_id, 
cv.region_code,
nl."ID"::integer as licence_id,
cv.version_number as version,
NOW() as date_created
from water.charge_elements ce
join water.charge_versions cv on ce.charge_version_id=cv.charge_version_id
join import."NALD_ABS_LICENCES" nl on cv.licence_ref=nl."LIC_NO"
where cv.source='nald';
